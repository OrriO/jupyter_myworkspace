#-*- coding: utf-8 -*-
# @Time    : 2018/12/3 9:52
# @Author  : Z
# @Email   : S
# @File    : 17.numpyRandomNumber.py
import numpy as np
r1=np.random.randn(6,6) #standard normal
print(type(r1)) #<class 'numpy.ndarray'>
print(r1)
# [[ 0.35768082 -2.24003375  0.97901171  2.04710821 -1.91734127  0.96683924]
#  [-0.65749804 -0.21972666 -1.19110268 -0.04720957  1.09637419 -0.51316831]
#  [-0.429027    0.61554557 -0.89818235  0.15425943 -1.73827879 -0.24784541]
#  [-0.95538335  0.88994479 -0.32886515 -0.10198783  0.42304614  0.1480035 ]
#  [-0.22419574  0.27653052  1.75053804  0.87883921 -0.48265662 -0.11972343]
#  [ 1.46267967 -0.19993685  0.14474872 -0.04683207 -0.45452299 -2.14185888]]
r2=np.random.normal(0,1,size=(5,5)) #a normal (Gaussian) distribution.
print(r2)
# [[-0.55432089  0.09616651  0.08412417  1.01892604  0.19838077]
#  [-2.13648325 -0.83398919  0.68912474  0.08068824 -0.07962395]
#  [-0.48719013 -0.29557087  0.12035972  0.09068141  0.82581846]
#  [ 1.36233663  0.2267474  -1.18723997 -1.99202401 -0.21559526]
#  [ 0.98151658 -1.62043668  0.49755657 -1.87820321  0.25764869]]
r3=np.random.binomial(10,0.5,size=(3,3))
print(r3)
# [[3 5 7]
#  [6 4 3]
#  [4 6 6]]
shape, scale = 2., 2.  # mean=4, std=2*sqrt(2)
s = np.random.gamma(shape, scale, 1000)
print(s)